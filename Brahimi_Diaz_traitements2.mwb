USE bd_tp_synthese;
/********************Question R6***********************/
CREATE OR REPLACE VIEW vueCommandeParClient AS
	SELECT concat(client.titre, " ",UPPER(client.nom), " ",client.prenom) AS client, count(commande.codeClient) AS commande, sum(detailCommande.prixUnitaire * detailCommande.quantite) AS total
    FROM (client INNER JOIN commande ON client.codeClient = commande.codeClient)
    INNER JOIN detailCommande ON commande.numeroCommande = detailCommande.numeroCommande
    GROUP BY client.nom;
SELECT * FROM vueCommandeParClient;
/********************Question R7***********************/
SELECT * FROM vueCommandeParClient 
WHERE commande >= 8 AND total > 100
ORDER BY COMMANDE;
/********************Question R8***********************/
SELECT numeroLivre, titre, codeCategorie, descriptif, prixCatalogue, nbrePages
FROM livre WHERE prixCatalogue > (SELECT AVG(prixCatalogue) from livre where livre.numeroLivre = numeroLivre) +10;
/********************Question R9***********************/
SELECT vendeur.nom, superviseur.nom from vendeur INNER JOIN vendeur AS superviseur ON vendeur.numeroVendeur = superviseur.numeroSuperviseur;
/********************Question R10***********************/
SELECT livre.numeroLivre, titre, codeCategorie, descriptif, prixCatalogue, nbrePages, codeAuteur FROM livre INNER JOIN livre_auteur ON livre.numeroLivre = livre_auteur.numeroLivre 
WHERE codeCategorie = (SELECT codeCategorie FROM livre WHERE titre ="Le sagouin") AND
codeAuteur = (SELECT codeAuteur FROM livre_auteur INNER JOIN livre ON livre_auteur.numeroLivre = livre.numeroLivre WHERE livre.titre ="Le sagouin");
/********************Question P2***********************/
DROP PROCEDURE IF EXISTS derniereCommande;
DELIMITER |
CREATE PROCEDURE derniereCommande(
 IN p_codeClient char(6)
)
BEGIN
	DECLARE v_numeroCommande INT(10);
    SELECT numeroCommande FROM commande WHERE codeClient = p_codeClient order by numeroCommande DESC
    LIMIT 1 INTO v_numeroCommande;
    SELECT * FROM detailCommande WHERE numeroCommande = v_numeroCommande;
END |
DELIMITER ;
CALL derniereCommande("AIM001");
/********************Question P3***********************/
DROP PROCEDURE IF EXISTS listeSuperviseur;
DELIMITER |
CREATE PROCEDURE listeSuperviseur()
BEGIN
	SELECT  DISTINCT vendeur.numeroVendeur, vendeur.nom FROM vendeur INNER JOIN vendeur AS superviseur ON vendeur.numeroVendeur = superviseur.numeroSuperviseur;
END |
DELIMITER ;
CALL listeSuperviseur();
/********************Question P4***********************/
DROP PROCEDURE IF EXISTS insererLivre;
DELIMITER |
CREATE PROCEDURE insererLivre(
    IN p_titre VARCHAR(255),
    IN p_codeCategorie CHAR(2),
    IN p_descriptif TEXT,
    IN p_prixCatalogue DECIMAL(10,2),
    IN p_nbrePages SMALLINT(5)
)
BEGIN
    INSERT INTO livre (titre, codeCategorie, descriptif, prixCatalogue, nbrePages)
    VALUES (p_titre, p_codeCategorie, p_descriptif, p_prixCatalogue, p_nbrePages);
END |
DELIMITER ;
CALL insererLivre('Livre example','LI','Je sais pas quoi mettre c\'est juste un example',15.06,341);
SELECT * FROM LIVRE;